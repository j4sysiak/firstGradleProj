/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.10.2/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}


	

task mycustomTask1{

	group "MyCustomTask"
	description "This is description for my custom task1"
	doLast{
	
		println "This is my mycustomTask1 running."
	}
}


task mycustomTask2{

	group "MyCustomTask"
	description "This is description for my custom task2"
	doLast{
	
		println "This is my mycustomTask2 running."
	}
}


task copyFile(type: Copy) {
   
     group "MyCustomTask"
     from 'c:\\Temp1\\testData.txt'
     into 'c:\\Temp2'
}

 

task doSomeOperation1{

	group "MyCustomTask"
	
	doLast{
		println "This is doSomeOperation1."
	}
}
doSomeOperation1.onlyIf {
	project.hasProperty('doOperation')
}



task doSomeOperation2{

	group "MyCustomTask"
	
	doLast{
		println "This is doSomeOperation2."
	}
}



task doSomeOperation3(dependsOn: 'doSomeOperation2'){

	group "MyCustomTask"
	
	doLast{
		println "This is doSomeOperation3."
	}
}


task packageDistribution(type: Zip) {

group "MyCustomTask"

	from "c:\\Temp1\\testData.txt"
	destinationDir = file("c:\\Temp2\\dist") 
	archiveName = "my-distribution.zip"
}
































